apiVersion: apps/v1
kind: Deployment
metadata:
  name: processor
  namespace: aurora-logs
spec:
  replicas: 3  # Multiple instances for HA and throughput
  selector:
    matchLabels:
      app: processor
  template:
    metadata:
      labels:
        app: processor
    spec:
      serviceAccountName: processor-sa
      nodeSelector:
        kubernetes.io/arch: arm64
      # hostNetwork: false for cluster DNS resolution
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: processor
        image: 072006186126.dkr.ecr.us-east-1.amazonaws.com/aurora-log-system:processor-latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # Pod Identity handles AWS credentials automatically
        - name: OPENOBSERVE_USER
          valueFrom:
            secretKeyRef:
              name: openobserve-credentials
              key: admin-email
        - name: OPENOBSERVE_PASS
          valueFrom:
            secretKeyRef:
              name: openobserve-credentials
              key: admin-password
        ports:
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: metrics
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
          readOnly: false
        - name: cache
          mountPath: /cache
          readOnly: false
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: cache
        emptyDir:
          sizeLimit: 5Gi
