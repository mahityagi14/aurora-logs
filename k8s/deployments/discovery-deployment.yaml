apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery
  namespace: aurora-logs
spec:
  replicas: 2  # Multiple instances for HA  # POC: 1; Production: 5-10 with sharding
  selector:
    matchLabels:
      app: discovery
  template:
    metadata:
      labels:
        app: discovery
    spec:
      serviceAccountName: discovery-sa
      nodeSelector:
        kubernetes.io/arch: arm64
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - discovery
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: discovery
        image: [account-id].dkr.ecr.[region].amazonaws.com/aurora-log-system:discovery-latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        envFrom:
        - configMapRef:
            name: app-config
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          exec:
            command:
            - "./discovery"
            - "-health"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - "./discovery"
            - "-health"
          initialDelaySeconds: 10
          periodSeconds: 10
