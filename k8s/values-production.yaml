# Production Environment Values for Aurora Log System
# Optimized for cost and performance - $4,500-7,000/month

# AWS Configuration
awsRegion: "us-east-1"
awsAccountId: "YOUR_AWS_ACCOUNT_ID"  # Replace with your AWS account ID

# ECR Registry
ecrRegistry: "YOUR_AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com"  # Replace with your ECR registry

# DynamoDB DAX Cache Configuration (replacing ElastiCache)
daxClusterEndpoint: "aurora-prod-dax.abc123.dax-clusters.us-east-1.amazonaws.com:8111"

# S3 Configuration with Intelligent Tiering
s3BucketName: "company-aurora-logs-prod"
s3StorageClass: "INTELLIGENT_TIERING"

# OpenObserve Configuration
openObserveAdminEmail: "platform-team@yourcompany.com"
openObserveDataRetentionDays: 90  # 3 months retention

# Ingress Configuration with ALB
ingressCertificateArn: "arn:aws:acm:us-east-1:YOUR_ACCOUNT:certificate/YOUR_CERT_ID"
ingressSecurityGroup: "sg-prod-alb-aurora"
ingressSubnets:
  - "subnet-prod-public-1a"
  - "subnet-prod-public-1b"
  - "subnet-prod-public-1c"

# Production Replicas with HA
kafkaReplicas: 3  # Across 3 AZs
discoveryReplicas: 3  # HA configuration
processorReplicas: 10  # Base replicas, scales to 50
openObserveReplicas: 3  # HA configuration
valkeyReplicas: 0  # Using DAX instead

# Production Resource Limits
discoveryResources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "2000m"
    memory: "2Gi"

processorResources:
  requests:
    cpu: "1000m"
    memory: "2Gi"
  limits:
    cpu: "4000m"
    memory: "4Gi"

kafkaResources:
  requests:
    cpu: "1000m"
    memory: "4Gi"
  limits:
    cpu: "4000m"
    memory: "8Gi"

openObserveResources:
  requests:
    cpu: "2000m"
    memory: "8Gi"
  limits:
    cpu: "4000m"
    memory: "16Gi"

# Storage Configuration
openObserveStorageSize: "1000Gi"  # 1TB with lifecycle policies
kafkaStorageSize: "500Gi"
storageClass: "gp3"
storageIOPS: 3000
storageThroughput: 125  # MB/s

# HPA Configuration - Aggressive scaling
processorHPA:
  minReplicas: 10
  maxReplicas: 50
  targetCPUUtilization: 60
  targetMemoryUtilization: 70
  scaleDownStabilization: 300  # 5 minutes
  scaleUpStabilization: 60     # 1 minute

discoveryHPA:
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilization: 70
  targetMemoryUtilization: 80

# Fargate Spot Configuration
fargateEnabled: true
fargateProfiles:
  - name: processor-spot
    selectors:
      - namespace: aurora-logs
        labels:
          app: processor
          compute-type: fargate-spot
    spotPercentage: 80  # 80% spot, 20% on-demand

# Node Groups for non-Fargate workloads
nodeGroups:
  - name: system
    instanceTypes: ["t4g.medium", "t4g.large"]
    minSize: 2
    maxSize: 4
    spot: false  # On-demand for system components
  - name: workload
    instanceTypes: ["m6g.large", "m6g.xlarge", "m6g.2xlarge"]
    minSize: 0
    maxSize: 20
    spot: true
    spotPercentage: 100

# DynamoDB Configuration - Provisioned capacity
dynamoDBProvisionedMode: true
dynamoDBReadCapacity:
  min: 100
  max: 1000
  targetUtilization: 70
dynamoDBWriteCapacity:
  min: 200
  max: 2000
  targetUtilization: 70

# Production Monitoring
enableDetailedMetrics: true
enableTracking: true
enableTracing: true
logLevel: "warn"
metricsRetention: 15  # days

# Batch Processing - Optimized for throughput
processorBatchSize: 100
processorBatchTimeout: "10s"
processorConcurrency: 10
processorMaxRetries: 3
processorRetryBackoff: "exponential"

# Network Policies - Restricted
enableNetworkPolicies: true
allowedCIDRs:
  - "10.0.0.0/8"      # Internal VPC
  - "172.16.0.0/12"   # VPN access
  - "198.51.100.0/24" # Office IPs

# Security Configuration
podSecurityStandards: "restricted"
enablePodSecurityPolicy: true
enableAdmissionWebhooks: true
enableAuditLogging: true

# Service Mesh (optional)
serviceMeshEnabled: false  # Enable if needed
istioEnabled: false

# Backup Configuration
enableBackups: true
backupSchedule: "0 2 * * *"  # Daily at 2 AM
backupRetention: 30  # days

# Disaster Recovery
enableMultiRegion: false  # Enable for DR
drRegion: "us-west-2"

# Cost Optimization
enableKarpenter: true  # Dynamic node provisioning
enableClusterAutoscaler: false  # Using Karpenter instead
enableSpotInterruptionHandler: true
spotAllocationStrategy: "capacity-optimized-prioritized"

# Scheduled Scaling
enableScheduledScaling: true
schedules:
  - name: business-hours
    schedule: "0 8 * * 1-5"  # Weekdays 8 AM
    replicas:
      processor: 20
      discovery: 5
  - name: off-hours
    schedule: "0 18 * * 1-5"  # Weekdays 6 PM
    replicas:
      processor: 10
      discovery: 3
  - name: weekend
    schedule: "0 0 * * 6"  # Saturday midnight
    replicas:
      processor: 5
      discovery: 2

# Feature Flags
features:
  enableCaching: true
  enableCompression: true
  enableDeduplication: true
  enableParallelProcessing: true
  enableAdvancedMetrics: true
  enableCircuitBreaker: true
  enableRateLimiting: true
  enableAdaptiveConcurrency: true

# Performance Tuning
kafkaConfig:
  compressionType: "lz4"
  batchSize: 16384
  lingerMs: 10
  bufferMemory: 33554432
  retentionHours: 168  # 7 days

# Observability
tracingConfig:
  samplingRate: 0.1  # 10% sampling
  endpoint: "http://jaeger-collector:14268"

metricsConfig:
  scrapeInterval: "30s"
  pushGateway: "http://prometheus-pushgateway:9091"

# Compliance
dataResidency: "us-east-1"
encryptionAtRest: true
encryptionInTransit: true
auditLogRetention: 365  # days

# SLA Configuration
targetAvailability: 99.9
targetLatencyP99: 5000  # ms
targetThroughput: 100000  # logs/second

# Chaos Engineering (disabled by default)
chaosEnabled: false
chaosSchedule: "0 10 * * 3"  # Wednesday 10 AM

# Cost Allocation Tags
costAllocationTags:
  Environment: "production"
  CostCenter: "platform"
  Service: "aurora-logs"
  Team: "platform-engineering"

# Lifecycle Policies
lifecyclePolicies:
  preStopHook:
    exec:
      command: ["/bin/sh", "-c", "sleep 30"]
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10

# Jenkins Integration
jenkinsEnabled: true
jenkinsUrl: "https://jenkins.prod.internal"
jenkinsCredentialsSecret: "jenkins-aurora-logs"

# Maintenance Windows
maintenanceWindow:
  day: "sunday"
  hour: 3
  duration: 2  # hours