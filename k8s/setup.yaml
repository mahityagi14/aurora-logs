---
apiVersion: v1
kind: Namespace
metadata:
  name: aurora-logs
---
apiVersion: v1
kind: Namespace
metadata:
  name: fluent-bit
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: discovery-sa
  namespace: aurora-logs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: processor-sa
  namespace: aurora-logs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-sa
  namespace: aurora-logs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openobserve-sa
  namespace: aurora-logs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluent-bit
  namespace: fluent-bit
---
# ClusterRole for Fluent Bit to read pod logs
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit-read
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
---
# ClusterRoleBinding for Fluent Bit
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit-read
subjects:
- kind: ServiceAccount
  name: fluent-bit
  namespace: fluent-bit
---
# Role for Discovery service to access ConfigMaps
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: discovery-role
  namespace: aurora-logs
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# RoleBinding for Discovery service
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: discovery-rolebinding
  namespace: aurora-logs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: discovery-role
subjects:
- kind: ServiceAccount
  name: discovery-sa
  namespace: aurora-logs
---
# Role for Processor service
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: processor-role
  namespace: aurora-logs
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# RoleBinding for Processor service
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: processor-rolebinding
  namespace: aurora-logs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: processor-role
subjects:
- kind: ServiceAccount
  name: processor-sa
  namespace: aurora-logs
---
# NetworkPolicy for namespace isolation
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aurora-logs-network-policy
  namespace: aurora-logs
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: aurora-logs
    - namespaceSelector:
        matchLabels:
          name: fluent-bit
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: aurora-logs
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53  # DNS
    - protocol: UDP
      port: 53  # DNS
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 169.254.169.254/32  # Block IMDS v1
    ports:
    - protocol: TCP
      port: 443  # HTTPS for AWS APIs
    - protocol: TCP
      port: 80   # HTTP
---
# ResourceQuota for the namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: aurora-logs-quota
  namespace: aurora-logs
spec:
  hard:
    requests.cpu: "20"
    requests.memory: "40Gi"
    limits.cpu: "40"
    limits.memory: "80Gi"
    persistentvolumeclaims: "10"
    services: "10"
---
# LimitRange for default resource limits
apiVersion: v1
kind: LimitRange
metadata:
  name: aurora-logs-limits
  namespace: aurora-logs
spec:
  limits:
  - default:
      cpu: "2"
      memory: "4Gi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
