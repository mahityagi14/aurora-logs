#!/bin/bash
set -e

# Handle SIGTERM for graceful shutdown
trap 'echo "Received SIGTERM, initiating graceful shutdown..."; kill -TERM $PID; wait $PID' TERM INT

# Default values for KRaft mode (Kafka 4.0)
export KAFKA_CFG_NODE_ID="${KAFKA_CFG_NODE_ID:-1}"
export KAFKA_CFG_PROCESS_ROLES="${KAFKA_CFG_PROCESS_ROLES:-broker,controller}"
export KAFKA_CFG_CONTROLLER_QUORUM_VOTERS="${KAFKA_CFG_CONTROLLER_QUORUM_VOTERS:-1@kafka-service:9093}"
export KAFKA_CFG_LISTENERS="${KAFKA_CFG_LISTENERS:-PLAINTEXT://:9092,CONTROLLER://:9093}"
export KAFKA_CFG_ADVERTISED_LISTENERS="${KAFKA_CFG_ADVERTISED_LISTENERS:-PLAINTEXT://kafka-service.aurora-logs.svc.cluster.local:9092}"
export KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP="${KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP:-CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT}"
export KAFKA_CFG_CONTROLLER_LISTENER_NAMES="${KAFKA_CFG_CONTROLLER_LISTENER_NAMES:-CONTROLLER}"
export KAFKA_CFG_INTER_BROKER_LISTENER_NAME="${KAFKA_CFG_INTER_BROKER_LISTENER_NAME:-PLAINTEXT}"

# KRaft settings for Kafka 4.0
export KAFKA_ENABLE_KRAFT="${KAFKA_ENABLE_KRAFT:-yes}"
export KAFKA_KRAFT_CLUSTER_ID="${KAFKA_KRAFT_CLUSTER_ID:-aurora-logs-kafka-cluster}"

# Kafka 4.0 directory configurations
export KAFKA_CFG_LOG_DIRS="${KAFKA_CFG_LOG_DIRS:-/bitnami/kafka/data}"
export KAFKA_CFG_METADATA_LOG_DIR="${KAFKA_CFG_METADATA_LOG_DIR:-/bitnami/kafka/metadata}"

# Updated settings for Kafka 4.0 with new consumer rebalance protocol
export KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE="${KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE:-false}"
export KAFKA_CFG_DEFAULT_REPLICATION_FACTOR="${KAFKA_CFG_DEFAULT_REPLICATION_FACTOR:-1}"
export KAFKA_CFG_MIN_INSYNC_REPLICAS="${KAFKA_CFG_MIN_INSYNC_REPLICAS:-1}"
export KAFKA_CFG_NUM_PARTITIONS="${KAFKA_CFG_NUM_PARTITIONS:-10}"
export KAFKA_CFG_LOG_RETENTION_HOURS="${KAFKA_CFG_LOG_RETENTION_HOURS:-168}"
export KAFKA_CFG_LOG_RETENTION_BYTES="${KAFKA_CFG_LOG_RETENTION_BYTES:-107374182400}"
export KAFKA_CFG_COMPRESSION_TYPE="${KAFKA_CFG_COMPRESSION_TYPE:-snappy}"
export KAFKA_CFG_LOG_SEGMENT_BYTES="${KAFKA_CFG_LOG_SEGMENT_BYTES:-1073741824}"

# Performance tuning
export KAFKA_CFG_NUM_NETWORK_THREADS="${KAFKA_CFG_NUM_NETWORK_THREADS:-8}"
export KAFKA_CFG_NUM_IO_THREADS="${KAFKA_CFG_NUM_IO_THREADS:-8}"
export KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES="${KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES:-102400}"
export KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES="${KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES:-102400}"
export KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES="${KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES:-104857600}"

# Kafka 4.0 requires initial cluster ID
export KAFKA_CFG_INITIAL_BROKER_REGISTRATION_TIMEOUT_MS="${KAFKA_CFG_INITIAL_BROKER_REGISTRATION_TIMEOUT_MS:-60000}"

# Java 17 is used by default in Kafka 4.0
if [ "${BITNAMI_DEBUG}" = "true" ]; then
    export KAFKA_CFG_LOG4J_ROOT_LOGLEVEL="DEBUG"
    echo "Java version:"
    java -version
fi

echo "Starting Kafka 4.0 in KRaft mode (Java 17)..."
echo "Configuration summary:"
echo "Node ID: $KAFKA_CFG_NODE_ID"
echo "Roles: $KAFKA_CFG_PROCESS_ROLES"
echo "Listeners: $KAFKA_CFG_LISTENERS"

# Run Bitnami entrypoint
exec /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh
