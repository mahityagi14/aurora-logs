---
# OpenTelemetry Collector ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: aurora-logs
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      
      prometheus:
        config:
          scrape_configs:
            - job_name: 'aurora-services'
              scrape_interval: 30s
              kubernetes_sd_configs:
                - role: pod
                  namespaces:
                    names:
                      - aurora-logs
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: replace
                  target_label: __address__
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
    
    processors:
      batch:
        timeout: 10s
        send_batch_max_size: 1024
        send_batch_size: 256
      
      memory_limiter:
        check_interval: 1s
        limit_mib: 512
        spike_limit_mib: 128
      
      resource:
        attributes:
          - key: deployment.environment
            value: production
            action: insert
          - key: k8s.cluster.name
            value: aurora-logs-poc
            action: insert
          - key: k8s.node.name
            from_attribute: k8s.node.name
            action: insert
      
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.deployment.name
            - k8s.pod.name
            - k8s.node.name
    
    exporters:
      # Export error logs to OpenObserve
      otlphttp/error_logs:
        endpoint: http://openobserve-service.aurora-logs.svc.cluster.local:5080/api/default/aurora_error_logs/_json
        tls:
          insecure: true
        headers:
          Authorization: Basic YWRtaW5AZXhhbXBsZS5jb206Q29tcGxleHBhc3MjMTIz
          organization: default
        compression: gzip
        timeout: 30s
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
      
      # Export slowquery logs to OpenObserve  
      otlphttp/slowquery_logs:
        endpoint: http://openobserve-service.aurora-logs.svc.cluster.local:5080/api/default/aurora_slowquery_logs/_json
        tls:
          insecure: true
        headers:
          Authorization: Basic YWRtaW5AZXhhbXBsZS5jb206Q29tcGxleHBhc3MjMTIz
          organization: default
        compression: gzip
        timeout: 30s
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
      
      # Export traces
      otlphttp/traces:
        endpoint: http://openobserve-service.aurora-logs.svc.cluster.local:5080/api/default/v1/traces
        tls:
          insecure: true
        headers:
          Authorization: Basic YWRtaW5AZXhhbXBsZS5jb206Q29tcGxleHBhc3MjMTIz
      
      # Export metrics  
      prometheusremotewrite:
        endpoint: http://openobserve-service.aurora-logs.svc.cluster.local:5080/api/default/prometheus/api/v1/write
        headers:
          Authorization: Basic YWRtaW5AZXhhbXBsZS5jb206Q29tcGxleHBhc3MjMTIz
      
      # Debugging exporter
      debug:
        verbosity: detailed
        sampling_initial: 5
        sampling_thereafter: 200
    
    service:
      telemetry:
        logs:
          level: info
      
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch, resource, k8sattributes]
          exporters: [otlphttp/traces, debug]
        
        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, batch, resource, k8sattributes]
          exporters: [prometheusremotewrite, debug]
        
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch, resource]
          exporters: [otlphttp/error_logs, otlphttp/slowquery_logs, debug]

---
# OpenTelemetry Collector Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector-contrib
  namespace: aurora-logs
  labels:
    app: otel-collector-contrib
    component: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector-contrib
  template:
    metadata:
      labels:
        app: otel-collector-contrib
        component: observability
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: otel-collector-sa
      # Deploy only on aurora-node-2
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                - aurora-node-2
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:0.131.1-arm64
        command:
          - "/otelcol-contrib"
          - "--config=/etc/otel-collector-config.yaml"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        ports:
        - name: otlp-grpc
          containerPort: 4317
          protocol: TCP
        - name: otlp-http
          containerPort: 4318
          protocol: TCP
        - name: metrics
          containerPort: 8888
          protocol: TCP
        - name: health
          containerPort: 13133
          protocol: TCP
        volumeMounts:
        - name: otel-collector-config
          mountPath: /etc/otel-collector-config.yaml
          subPath: otel-collector-config.yaml
        livenessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 10
          periodSeconds: 10
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: otel-collector-config
        configMap:
          name: otel-collector-config

---
# Service for OpenTelemetry Collector
apiVersion: v1
kind: Service
metadata:
  name: otel-collector-contrib
  namespace: aurora-logs
  labels:
    app: otel-collector-contrib
    component: observability
spec:
  type: ClusterIP
  selector:
    app: otel-collector-contrib
  ports:
  - name: otlp-grpc
    port: 4317
    targetPort: 4317
    protocol: TCP
  - name: otlp-http
    port: 4318
    targetPort: 4318
    protocol: TCP
  - name: metrics
    port: 8888
    targetPort: 8888